//file:noinspection GroovyAssignabilityCheck
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.owasp.dependencycheck" version '8.4.0'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'com.h2database:h2:2.2.222'
	implementation 'com.mysql:mysql-connector-j:8.1.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.yaml:snakeyaml:2.2' // updated to 2.2 since spring boot uses older version which has a vulnerability
	testImplementation 'io.rest-assured:rest-assured:5.3.2' // added for integration testing instead of using TestRestTemplate
}

test {
	useJUnitPlatform{
		failFast = true
	}

	testLogging {
		// Test logging - standardOut, started, passed, skipped, failed
		events "passed", "skipped", "failed"
	}
	afterSuite { desc, result -> // prints the results of the test
		if (!desc.parent) { // will match the outermost suite

			// Printing the results of the test - from https://stackoverflow.com/questions/3963708/gradle-how-to-display-test-results-in-the-console-in-real-time
			def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
			def startItem = '|  ', endItem = '  |'
			def repeatLength = startItem.length() + output.length() + endItem.length()
			println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))

			// Adding a link to the Gradle report if all the tests passed, since gradle already does this for failed tests
			// Having to format the file path to a URI to be able to open it in the browser and replace the file:/ with file:/// to make it work
			if (result.failedTestCount == 0) {
				def reportFile = new File("${project.buildDir}/reports/tests/test/index.html")
				def reportUri = reportFile.toURI().toString().replaceFirst("file:/", "file:///")
				println("All tests passed, see the report at: ${reportUri}")
			}
		}
	}
	finalizedBy jacocoTestReport // report is generated after tests run
}


jacocoTestReport {
	dependsOn test // tests are run before generating the report
	reports {
		xml.required = true
	}
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

jar {
	enabled = false
}